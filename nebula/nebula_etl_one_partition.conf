{
  # =================== Spark ===================
  spark: {
    app: { name: "btc-clickhouse-to-nebula" }
    driver: { cores: 1, maxResultSize: 32G }
    cores: { max: 32 }
  }

  # =================== Nebula ===================
  nebula: {
    address: {
      graph: ["192.168.2.65:9669"]
      meta:  ["192.168.2.65:32768"]   # use your meta leader port if different
    }
    user: "root"
    pswd: "nebula"
    space: "bitcoin"
    connection: { timeout: 30000 }
    execution:  { retry: 3 }
    error: { max: 32, output: "/tmp/nebula-exchange-errors" }
    rate:  { limit: 1024, timeout: 1000 }
  }

  # =================== Partition to Sync ===================
  # Only this YYYYMM will be synced in all queries below.
  # Change it per run.
  ym: "202506"

  # =================== ClickHouse JDBC ===================
  ck: {
    driver: "com.clickhouse.jdbc.ClickHouseDriver"
    url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
    user: "default"
    password: "password"
    numPartition: 32
  }

  # =================== Batching ===================
  batches: {
    vertex_batch: 256
    vertex_partition: 32
    edge_batch: 512
    edge_partition: 32
  }

  # ===================== TAGS (vertices) =====================
  tags: [
    {
      name: block
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(hash)                                  AS vid,
          toInt64(number)                                 AS block_number,
          formatDateTime(timestamp, '%Y-%m-%d %H:%M:%S')  AS block_timestamp,
          toString(previous_block_hash)                   AS previous_block_hash
        FROM blocks
        WHERE toYYYYMM(timestamp) = '202506'
      """
      fields: [block_number, block_timestamp, previous_block_hash]
      nebula.fields: [block_number, block_timestamp, previous_block_hash]
      vertex: { field: vid }
      batch: 1024
      partition: 64
    },

    {
      name: transaction
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(hash)                                  AS vid,
          toBool(is_coinbase)                             AS is_coinbase
        FROM transactions
        WHERE toYYYYMM(block_timestamp)='202506'
      """
      fields: [is_coinbase]
      nebula.fields: [is_coinbase ]
      vertex: { field: vid }
      batch: 1024
      partition: 64
    },

    {
      name: output
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(concat(transaction_hash, ':', toString(output_index))) AS vid,
          toString(transaction_hash)                                      AS transaction_hash,
          toInt64(output_index)                                           AS output_index,
          toString(type)                                                  AS output_type,
          toFloat64(value)                                                AS output_value
        FROM outputs
        WHERE toYYYYMM(block_timestamp)='202506'
      """
      fields: [transaction_hash, output_index, output_type, output_value]
      nebula.fields: [transaction_hash, output_index, output_type, output_value]
      vertex: { field: vid }
      batch: 1024
      partition: 64
    },

    {
      name: address
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT DISTINCT
          toString(addr) AS vid,
          toString(addr) AS address
        FROM (
          SELECT arrayJoin(addresses) AS addr
          FROM outputs
          WHERE toYYYYMM(block_timestamp)='202506'
          HAVING length(toString(addr)) > 0
        )
      """
      fields: [address]
      nebula.fields: [address]
      vertex: { field: vid }
      batch: 1024
      partition: 64
    }
  ]

  # ===================== EDGES =====================
  edges: [
    {
      name: belongs_to                         # (tx) -> (block)
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(hash)       AS src,
          toString(block_hash) AS dst
        FROM transactions
        WHERE toYYYYMM(block_timestamp)='202506'
      """
      fields: []
      nebula.fields: []
      source: { field: src }
      target: { field: dst }
      batch: 2048
      partition: 64
    },

    {
      name: lock_to                            # (tx) -> (output)
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(transaction_hash)                                        AS src,
          toString(concat(transaction_hash, ':', toString(output_index)))   AS dst,
          toInt64(output_index)                                             AS output_index
        FROM outputs
        WHERE toYYYYMM(block_timestamp)='202506'
      """
      fields: [output_index]
      nebula.fields: [output_index]
      source: { field: src }
      target: { field: dst }
      batch: 2048
      partition: 64
    },

    {
      name: pay_to                             # (output) -> (address)
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(concat(transaction_hash, ':', toString(output_index))) AS src,
          toString(addr)                                                  AS dst
        FROM (
          SELECT transaction_hash, output_index, arrayJoin(addresses) AS addr
          FROM outputs
          WHERE toYYYYMM(block_timestamp)='202506'
        )
        HAVING length(dst) > 0
      """
      fields: []
      nebula.fields: []
      source: { field: src }
      target: { field: dst }
      batch: 2048
      partition: 64
    },

    {
      name: spent_by                           # (output) -> (spending tx)
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(concat(transaction_hash, ':', toString(output_index))) AS src,
          toString(spent_transaction_hash)                                AS dst,
          toInt64(spent_input_index)                                      AS spent_input_index
        FROM outputs
        WHERE toYYYYMM(block_timestamp)='202506'
          AND toUInt64(revision) > 0
      """
      fields: [spent_input_index]
      nebula.fields: [spent_input_index]
      source: { field: src }
      target: { field: dst }
      batch: 2048
      partition: 64
    },

    {
      name: coinbase                           # (block) -> (coinbase tx) with bool property
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(block_hash) AS src,
          toString(hash)       AS dst
        FROM transactions
        WHERE toYYYYMM(block_timestamp)='202506'
          AND toBool(is_coinbase) = true
      """
      fields: []
      nebula.fields: []
      source: { field: src }
      target: { field: dst }
      batch: 2048
      partition: 64
    },
    {
      name: chain_to                           # (child block) -> (parent block)
      type: { source: jdbc, sink: client }
      driver: "com.clickhouse.jdbc.ClickHouseDriver"
      url: "jdbc:clickhouse://192.168.2.65:8123/bitcoin"
      user: "default"
      password: "password"
      numPartition: 32
      sentence: """
        SELECT
          toString(hash)                AS src,
          toString(previous_block_hash) AS dst
        FROM blocks
        WHERE toYYYYMM(timestamp)='202506'
          AND previous_block_hash IS NOT NULL
          AND length(previous_block_hash) > 0
      """
      fields: []
      nebula.fields: []
      source: { field: src }
      target: { field: dst }
      batch: 2048
      partition: 64
    }
  ]
}